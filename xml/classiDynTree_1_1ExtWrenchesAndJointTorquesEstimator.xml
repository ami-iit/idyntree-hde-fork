<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator" kind="class" language="C++" prot="public">
    <compoundname>iDynTree::ExtWrenchesAndJointTorquesEstimator</compoundname>
    <includes local="no">iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a7c99313056580a1c4b3d430b2979ed89" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Model" kindref="compound">Model</ref></type>
        <definition>Model iDynTree::ExtWrenchesAndJointTorquesEstimator::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <briefdescription>
<para>Structure variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="52" column="11" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a8e0a0934d651bbc4df90cb2ef36c16f8" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1SubModelDecomposition" kindref="compound">SubModelDecomposition</ref></type>
        <definition>SubModelDecomposition iDynTree::ExtWrenchesAndJointTorquesEstimator::m_submodels</definition>
        <argsstring></argsstring>
        <name>m_submodels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="53" column="27" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a2419039fe9f3da18a4390b7d3f4ce9fe" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1SensorsList" kindref="compound">SensorsList</ref></type>
        <definition>SensorsList iDynTree::ExtWrenchesAndJointTorquesEstimator::m_sensors</definition>
        <argsstring></argsstring>
        <name>m_sensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="54" column="17" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a5188d8fcd4929c15ef9cd00fd73567d1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::m_isModelValid</definition>
        <argsstring></argsstring>
        <name>m_isModelValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="55" column="10" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ab37cbf8652a9ac0ed931260aeeefded6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::m_isKinematicsUpdated</definition>
        <argsstring></argsstring>
        <name>m_isKinematicsUpdated</name>
        <briefdescription>
<para>Traveral used for the dynamics computations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="56" column="10" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ae0ce4359181d853be92b88cdeafa69ff" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1Traversal" kindref="compound">Traversal</ref></type>
        <definition>Traversal iDynTree::ExtWrenchesAndJointTorquesEstimator::m_dynamicTraversal</definition>
        <argsstring></argsstring>
        <name>m_dynamicTraversal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="59" column="15" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a1882f61b3453b6a5c6112e35a4815ace" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkTraversalsCache" kindref="compound">LinkTraversalsCache</ref></type>
        <definition>LinkTraversalsCache iDynTree::ExtWrenchesAndJointTorquesEstimator::m_kinematicTraversals</definition>
        <argsstring></argsstring>
        <name>m_kinematicTraversals</name>
        <briefdescription>
<para>Vector of <ref refid="classiDynTree_1_1Traversal" kindref="compound">Traversal</ref> used for the kinematic computations. </para>
        </briefdescription>
        <detaileddescription>
<para>m_kinematicTraversals.getTraversalWithLinkAsBase(l) contains the traversal with base link l . </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="65" column="25" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ad66bd96fb4e15eebe79840a535301f51" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1JointPosDoubleArray" kindref="compound">JointPosDoubleArray</ref></type>
        <definition>JointPosDoubleArray iDynTree::ExtWrenchesAndJointTorquesEstimator::m_jointPos</definition>
        <argsstring></argsstring>
        <name>m_jointPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="67" column="25" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a940080c96e8902612b6ba498aab8bd2d" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkVelArray" kindref="compound">LinkVelArray</ref></type>
        <definition>LinkVelArray iDynTree::ExtWrenchesAndJointTorquesEstimator::m_linkVels</definition>
        <argsstring></argsstring>
        <name>m_linkVels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="68" column="18" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a4ce21922d525f32ac0b4dad58a2dac4c" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkAccArray" kindref="compound">LinkAccArray</ref></type>
        <definition>LinkAccArray iDynTree::ExtWrenchesAndJointTorquesEstimator::m_linkProperAccs</definition>
        <argsstring></argsstring>
        <name>m_linkProperAccs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="69" column="18" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1add15a23c42a1eed9bbdf5528a79aedfc" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkWrenches" kindref="compound">LinkNetExternalWrenches</ref></type>
        <definition>LinkNetExternalWrenches iDynTree::ExtWrenchesAndJointTorquesEstimator::m_linkNetExternalWrenches</definition>
        <argsstring></argsstring>
        <name>m_linkNetExternalWrenches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="70" column="29" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a17ba66ad1147e01871b368cd7843f706" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1LinkWrenches" kindref="compound">LinkInternalWrenches</ref></type>
        <definition>LinkInternalWrenches iDynTree::ExtWrenchesAndJointTorquesEstimator::m_linkIntWrenches</definition>
        <argsstring></argsstring>
        <name>m_linkIntWrenches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="71" column="29" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a956b700980cdb249747a60a46b3da776" prot="private" static="no" mutable="no">
        <type><ref refid="classiDynTree_1_1FreeFloatingGeneralizedTorques" kindref="compound">FreeFloatingGeneralizedTorques</ref></type>
        <definition>FreeFloatingGeneralizedTorques iDynTree::ExtWrenchesAndJointTorquesEstimator::m_generalizedTorques</definition>
        <argsstring></argsstring>
        <name>m_generalizedTorques</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="72" column="36" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1af439c6052af9ab34ce6db052750cea1b" prot="private" static="no" mutable="no">
        <type><ref refid="structiDynTree_1_1estimateExternalWrenchesBuffers" kindref="compound">estimateExternalWrenchesBuffers</ref></type>
        <definition>estimateExternalWrenchesBuffers iDynTree::ExtWrenchesAndJointTorquesEstimator::m_calibBufs</definition>
        <argsstring></argsstring>
        <name>m_calibBufs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="74" column="37" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ae61e621887fff2419b6b58069791b186" prot="private" static="no" mutable="no">
        <type><ref refid="structiDynTree_1_1estimateExternalWrenchesBuffers" kindref="compound">estimateExternalWrenchesBuffers</ref></type>
        <definition>estimateExternalWrenchesBuffers iDynTree::ExtWrenchesAndJointTorquesEstimator::m_bufs</definition>
        <argsstring></argsstring>
        <name>m_bufs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="75" column="37" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ab3725b4b03d337cfa361f2dfdbfed2d4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iDynTree::ExtWrenchesAndJointTorquesEstimator::ExtWrenchesAndJointTorquesEstimator</definition>
        <argsstring>(const ExtWrenchesAndJointTorquesEstimator &amp;)</argsstring>
        <name>ExtWrenchesAndJointTorquesEstimator</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator" kindref="compound">ExtWrenchesAndJointTorquesEstimator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Disable copy constructor and copy operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="80" column="4" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a4bcfb0a181f1106f4a7eff14757f1ef5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator" kindref="compound">ExtWrenchesAndJointTorquesEstimator</ref> &amp;</type>
        <definition>ExtWrenchesAndJointTorquesEstimator&amp; iDynTree::ExtWrenchesAndJointTorquesEstimator::operator=</definition>
        <argsstring>(const ExtWrenchesAndJointTorquesEstimator &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator" kindref="compound">ExtWrenchesAndJointTorquesEstimator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy operator is forbidden. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="85" column="40" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="85" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1afaddafcf6ed76bc417e3780ceebf81db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::ExtWrenchesAndJointTorquesEstimator::ExtWrenchesAndJointTorquesEstimator</definition>
        <argsstring>()</argsstring>
        <name>ExtWrenchesAndJointTorquesEstimator</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="91" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a21ecaac3728255f5ad511123ca97ec77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iDynTree::ExtWrenchesAndJointTorquesEstimator::~ExtWrenchesAndJointTorquesEstimator</definition>
        <argsstring>()</argsstring>
        <name>~ExtWrenchesAndJointTorquesEstimator</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="96" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ab62c38a61392178a65af5a90a6a7a076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::setModelAndSensors</definition>
        <argsstring>(const Model &amp;_model, const SensorsList &amp;_sensors)</argsstring>
        <name>setModelAndSensors</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1Model" kindref="compound">Model</ref> &amp;</type>
          <declname>_model</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1SensorsList" kindref="compound">SensorsList</ref> &amp;</type>
          <declname>_sensors</declname>
        </param>
        <briefdescription>
<para>Set model and sensors used for the estimation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">_model</parametername>
</parameternamelist>
<parameterdescription>
<para>the kinematic and dynamic model used for the estimation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">_sensors</parametername>
</parameternamelist>
<parameterdescription>
<para>the sensor model used for the estimation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went well (model and sensors are well formed), false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1af366663099c8b4772ab27485bc3581f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::loadModelAndSensorsFromFile</definition>
        <argsstring>(const std::string filename, const std::string filetype=&quot;&quot;)</argsstring>
        <name>loadModelAndSensorsFromFile</name>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filetype</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Load model and sensors from file. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="classiDynTree_1_1ModelLoader_1a4731f7a0967a0f88b9ee760027f42c28" kindref="member">iDynTree::ModelLoader::loadModelFromFile</ref> and call setModelAndSensors on the parsed <ref refid="classiDynTree_1_1Model" kindref="compound">Model</ref> and <ref refid="classiDynTree_1_1SensorsList" kindref="compound">SensorsList</ref></para>
</xrefdescription></xrefsect></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the file to load. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filetype</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) explicit definiton of the filetype to load. Only &quot;urdf&quot; is supported at the moment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went well (files were correctly loaded and consistent), false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a65ada8c5265bed3d7f19bd1b3694be18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::loadModelAndSensorsFromFileWithSpecifiedDOFs</definition>
        <argsstring>(const std::string filename, const std::vector&lt; std::string &gt; &amp;consideredDOFs, const std::string filetype=&quot;&quot;)</argsstring>
        <name>loadModelAndSensorsFromFileWithSpecifiedDOFs</name>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>consideredDOFs</declname>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filetype</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Load model and sensors from file, specifieng the dof considered for the estimation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this will create e a reduced model only with the joint specified in consideredDOFs and the fixed joints in which FT sensor are mounted.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>path to the file to load. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">consideredDOFs</parametername>
</parameternamelist>
<parameterdescription>
<para>list of dof to consider in the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filetype</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) explicit definiton of the filetype to load. Only &quot;urdf&quot; is supported at the moment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went well (files were correctly loaded and consistent), false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ae1fcc20d0e3eb0eace44e334d931c0f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classiDynTree_1_1Model" kindref="compound">Model</ref> &amp;</type>
        <definition>const Model&amp; iDynTree::ExtWrenchesAndJointTorquesEstimator::model</definition>
        <argsstring>() const</argsstring>
        <name>model</name>
        <briefdescription>
<para>Get used model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the kinematic and dynamic model used for estimation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="142" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a5da76e1decfef128f4580a108d865166" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classiDynTree_1_1SensorsList" kindref="compound">SensorsList</ref> &amp;</type>
        <definition>const SensorsList&amp; iDynTree::ExtWrenchesAndJointTorquesEstimator::sensors</definition>
        <argsstring>() const</argsstring>
        <name>sensors</name>
        <briefdescription>
<para>Get used sensors. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the sensor model used for estimation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="149" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a0ad964451590f8bbe0a9bb9e01de1374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classiDynTree_1_1SubModelDecomposition" kindref="compound">SubModelDecomposition</ref> &amp;</type>
        <definition>const SubModelDecomposition&amp; iDynTree::ExtWrenchesAndJointTorquesEstimator::submodels</definition>
        <argsstring>() const</argsstring>
        <name>submodels</name>
        <briefdescription>
<para>Get the used submodel decomposition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the used submodel decomposition. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="156" column="34"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a5d44956cd4c5a64c2c3397fce2c9edd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::updateKinematicsFromFloatingBase</definition>
        <argsstring>(const JointPosDoubleArray &amp;jointPos, const JointDOFsDoubleArray &amp;jointVel, const JointDOFsDoubleArray &amp;jointAcc, const FrameIndex &amp;floatingFrame, const Vector3 &amp;properClassicalLinearAcceleration, const Vector3 &amp;angularVel, const Vector3 &amp;angularAcc)</argsstring>
        <name>updateKinematicsFromFloatingBase</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointPosDoubleArray" kindref="compound">JointPosDoubleArray</ref> &amp;</type>
          <declname>jointPos</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">JointDOFsDoubleArray</ref> &amp;</type>
          <declname>jointVel</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">JointDOFsDoubleArray</ref> &amp;</type>
          <declname>jointAcc</declname>
        </param>
        <param>
          <type>const FrameIndex &amp;</type>
          <declname>floatingFrame</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector3</ref> &amp;</type>
          <declname>properClassicalLinearAcceleration</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector3</ref> &amp;</type>
          <declname>angularVel</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector3</ref> &amp;</type>
          <declname>angularAcc</declname>
        </param>
        <briefdescription>
<para>Set the kinematic information necessary for the force estimation using the acceleration and angular velocity information of a floating frame. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Tipically the floating frame information comes from an sensor containing a gyroscope (providing the angular velocity) and an accelerometer (providing the classical proper acceleration). As inertial sensors that return angular acceleration exist but are not common, the angular acceleration is usually obtained by numerical derivation on the angular velocity measure. In some cases it could make sense to just neglet the contribution of the floating frame angular acceleration (setting it to a zero vector), if its impact to the dynamics is marginal.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jointPos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the joints of the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointVel</parametername>
</parameternamelist>
<parameterdescription>
<para>the velocities of the joints of the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointAcc</parametername>
</parameternamelist>
<parameterdescription>
<para>the accelerations of the joints of the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">floatingFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the frame for which kinematic information is provided. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">properClassicalLinearAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>proper (actual acceleration-gravity) classical acceleration of the origin of the specified frame, expressed in the specified frame orientation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">angularVel</parametername>
</parameternamelist>
<parameterdescription>
<para>angular velocity (wrt to an inertial frame) of the specified floating frame, expressed in the specified frame orientation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">angularAcc</parametername>
</parameternamelist>
<parameterdescription>
<para>angular acceleration (wrt to an inertial frame) of the specified floating frame , expressed in the specified frame orientation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went ok, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="184" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a988f7114c5e0661ddd931d98c04645c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::updateKinematicsFromFixedBase</definition>
        <argsstring>(const JointPosDoubleArray &amp;jointPos, const JointDOFsDoubleArray &amp;jointVel, const JointDOFsDoubleArray &amp;jointAcc, const FrameIndex &amp;fixedFrame, const Vector3 &amp;gravity)</argsstring>
        <name>updateKinematicsFromFixedBase</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointPosDoubleArray" kindref="compound">JointPosDoubleArray</ref> &amp;</type>
          <declname>jointPos</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">JointDOFsDoubleArray</ref> &amp;</type>
          <declname>jointVel</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">JointDOFsDoubleArray</ref> &amp;</type>
          <declname>jointAcc</declname>
        </param>
        <param>
          <type>const FrameIndex &amp;</type>
          <declname>fixedFrame</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1VectorFixSize" kindref="compound">Vector3</ref> &amp;</type>
          <declname>gravity</declname>
        </param>
        <briefdescription>
<para>Set the kinematic information necessary for the force estimation assuming that a given frame is not accelerating with respect to the inertial frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jointPos</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the joints of the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointVel</parametername>
</parameternamelist>
<parameterdescription>
<para>the velocities of the joints of the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointAcc</parametername>
</parameternamelist>
<parameterdescription>
<para>the accelerations of the joints of the model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fixedFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the frame that is not accelerating with respect to the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gravity</parametername>
</parameternamelist>
<parameterdescription>
<para>the gravity acceleration vector, expressed in the specified fixed frame. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went ok, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="203" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a903f0fca32abdb551ffe7eda013ce462" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::computeExpectedFTSensorsMeasurements</definition>
        <argsstring>(const LinkUnknownWrenchContacts &amp;unknowns, SensorsMeasurements &amp;predictedMeasures, LinkContactWrenches &amp;estimatedContactWrenches, JointDOFsDoubleArray &amp;estimatedJointTorques)</argsstring>
        <name>computeExpectedFTSensorsMeasurements</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1LinkUnknownWrenchContacts" kindref="compound">LinkUnknownWrenchContacts</ref> &amp;</type>
          <declname>unknowns</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1SensorsMeasurements" kindref="compound">SensorsMeasurements</ref> &amp;</type>
          <declname>predictedMeasures</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1LinkContactWrenches" kindref="compound">LinkContactWrenches</ref> &amp;</type>
          <declname>estimatedContactWrenches</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">JointDOFsDoubleArray</ref> &amp;</type>
          <declname>estimatedJointTorques</declname>
        </param>
        <briefdescription>
<para>Predict FT sensors using the knoledge of external wrenches location. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used to estimate the expected measurement of the FT sensors. The typical use of this function is to specify only one external unknown wrench in the unknowns parameter and then compute the expected measurements of the FT sensors using the kinematic information specified with an updateKinematics*** method. The location of the single external unknown wrench is the one of the only link that is supporting the weight of the robot.</para>
<para>This function can also be used to estimate the FT sensor measurements in case two unknown external wrenches are applied on the robot, if some additional assumption about the simmetry of the robot configuration, the joint torques and the external wrenches can be done.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">unknowns</parametername>
</parameternamelist>
<parameterdescription>
<para>the unknown external wrenches. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">predictedMeasures</parametername>
</parameternamelist>
<parameterdescription>
<para>the estimate measures for the FT sensors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">estimatedContactWrenches</parametername>
</parameternamelist>
<parameterdescription>
<para>the estimated contact wrenches. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">estimatedJointTorques</parametername>
</parameternamelist>
<parameterdescription>
<para>the estimated joint torques. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went well, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="230" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a9abd2346013d2a811c5336255323962b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::estimateExtWrenchesAndJointTorques</definition>
        <argsstring>(const LinkUnknownWrenchContacts &amp;unknowns, const SensorsMeasurements &amp;ftSensorsMeasures, LinkContactWrenches &amp;estimatedContactWrenches, JointDOFsDoubleArray &amp;estimatedJointTorques)</argsstring>
        <name>estimateExtWrenchesAndJointTorques</name>
        <param>
          <type>const <ref refid="classiDynTree_1_1LinkUnknownWrenchContacts" kindref="compound">LinkUnknownWrenchContacts</ref> &amp;</type>
          <declname>unknowns</declname>
        </param>
        <param>
          <type>const <ref refid="classiDynTree_1_1SensorsMeasurements" kindref="compound">SensorsMeasurements</ref> &amp;</type>
          <declname>ftSensorsMeasures</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1LinkContactWrenches" kindref="compound">LinkContactWrenches</ref> &amp;</type>
          <declname>estimatedContactWrenches</declname>
        </param>
        <param>
          <type><ref refid="classiDynTree_1_1JointDOFsDoubleArray" kindref="compound">JointDOFsDoubleArray</ref> &amp;</type>
          <declname>estimatedJointTorques</declname>
        </param>
        <briefdescription>
<para>Estimate the external wrenches and the internal joint torques using the measurement of the internal F/T sensors. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the main method of the class. The technique implemented in this method is the one described in the paper:</para>
<para>&quot;Contact force estimations using tactile sensors and force/torque sensors&quot;</para>
<para>Del Prete, A., Natale, L., Nori, F., &amp; Metta, G. (2012). Contact force estimations using tactile sensors and force/torque sensors. URL : <ulink url="http://www.researchgate.net/profile/Andrea_Del_Prete/publication/236152161_Contact_Force_Estimations_Using_Tactile_Sensors_and_Force__Torque_Sensors/links/00b495166e74a5369d000000.pdf">http://www.researchgate.net/profile/Andrea_Del_Prete/publication/236152161_Contact_Force_Estimations_Using_Tactile_Sensors_and_Force__Torque_Sensors/links/00b495166e74a5369d000000.pdf</ulink></para>
<para><simplesect kind="note"><para>There should be at least 6 unknowns variables for each submodel for which the estimation of external wrenches is performed (i.e. usually 1 unknown wrench for each submodel). If is not the case, undefined results could occur in the estimation.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">unknowns</parametername>
</parameternamelist>
<parameterdescription>
<para>the unknown external wrenches </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ftSensorsMeasures</parametername>
</parameternamelist>
<parameterdescription>
<para>the measurements for the FT sensors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">estimatedContactWrenches</parametername>
</parameternamelist>
<parameterdescription>
<para>the estimated contact wrenches. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">estimatedJointTorques</parametername>
</parameternamelist>
<parameterdescription>
<para>the estimated joint torques. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went ok, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="257" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a584e5d2ca3426529f407dbb5248f290e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::checkThatTheModelIsStill</definition>
        <argsstring>(const double gravityNorm, const double properAccTol, const double verbose)</argsstring>
        <name>checkThatTheModelIsStill</name>
        <param>
          <type>const double</type>
          <declname>gravityNorm</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>properAccTol</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Check if the kinematics set in the model are the one of a fixed model. </para>
        </briefdescription>
        <detaileddescription>
<para>While computing the expected F/T sensors measures, you tipically want the model to be still, to reduce the sources of noise .</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">gravityNorm</parametername>
</parameternamelist>
<parameterdescription>
<para>the norm of the gravity (tipically 9.81) against with all the proper accelerations are check (for a still model, the proper acceleration norm should be close to the gravity norm. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">properAccTol</parametername>
</parameternamelist>
<parameterdescription>
<para>tolerance to use for the check on the proper acceleration norm. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>true if you want to print debug information, false otherwise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the model is still, false if it is moving or if the kinematics was never setted.</para>
</simplesect>
<simplesect kind="note"><para>This method can be computationally expensive, so in most case it may be a better idea to just do the check on the input variables (joint velocities, joint acceleration). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="278" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ad52d10a9a145eba8d52c67ea65128554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool iDynTree::ExtWrenchesAndJointTorquesEstimator::estimateLinkNetWrenchesWithoutGravity</definition>
        <argsstring>(LinkNetTotalWrenchesWithoutGravity &amp;netWrenches)</argsstring>
        <name>estimateLinkNetWrenchesWithoutGravity</name>
        <param>
          <type><ref refid="classiDynTree_1_1LinkWrenches" kindref="compound">LinkNetTotalWrenchesWithoutGravity</ref> &amp;</type>
          <declname>netWrenches</declname>
        </param>
        <briefdescription>
<para>Compute the vector of the sum of all the wrenches (both internal and external, excluding gravity) acting on link i, expressed (both orientation and point) with respect to the reference frame of link i, using the articulated body model and the kinematics information provided by the updateKinematics* methods. </para>
        </briefdescription>
        <detaileddescription>
<para>This is tipically computed as I*a+v*(I*v) , where a is the proper acceleration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">netWrenches</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of link net wrenches. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all went ok, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="293" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Estimator for external wrenches and joint torques using internal F/T sensors. </para>
    </briefdescription>
    <detaileddescription>
<para>This is a class for estimating external wrenches and joint torques using as an input the robot velocities and the accelerations and the measurement of internal six axis F/T sensors.</para>
<para>The kinematic information (position,velocity and acceleration) necessary for the estimation can be provided in two ways:<itemizedlist>
<listitem><para>using the updateKinematicsFromFloatingBase</para>
</listitem><listitem><para>using the updateKinematicsFromFixedBase</para>
</listitem></itemizedlist>
</para>
<para>Note that in both ways there is no need (for the estimation) to provide the absolute position and linear velocity of the robot with respect to the inertial frame. The effect of gravity is considered by directly using the proper acceleration in the case of the floating frame (proper acceleration can be directly measured by an accelerometer) or by directly providing the gravity vector in the fixed frame case. </para>
    </detaileddescription>
    <location file="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" line="47" column="1" bodyfile="iDynTree/Estimation/ExtWrenchesAndJointTorquesEstimator.h" bodystart="48" bodyend="295"/>
    <listofallmembers>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a584e5d2ca3426529f407dbb5248f290e" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>checkThatTheModelIsStill</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a903f0fca32abdb551ffe7eda013ce462" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>computeExpectedFTSensorsMeasurements</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a9abd2346013d2a811c5336255323962b" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>estimateExtWrenchesAndJointTorques</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ad52d10a9a145eba8d52c67ea65128554" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>estimateLinkNetWrenchesWithoutGravity</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ab3725b4b03d337cfa361f2dfdbfed2d4" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>ExtWrenchesAndJointTorquesEstimator</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1afaddafcf6ed76bc417e3780ceebf81db" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>ExtWrenchesAndJointTorquesEstimator</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1af366663099c8b4772ab27485bc3581f8" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>loadModelAndSensorsFromFile</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a65ada8c5265bed3d7f19bd1b3694be18" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>loadModelAndSensorsFromFileWithSpecifiedDOFs</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ae61e621887fff2419b6b58069791b186" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_bufs</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1af439c6052af9ab34ce6db052750cea1b" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_calibBufs</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ae0ce4359181d853be92b88cdeafa69ff" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_dynamicTraversal</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a956b700980cdb249747a60a46b3da776" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_generalizedTorques</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ab37cbf8652a9ac0ed931260aeeefded6" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_isKinematicsUpdated</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a5188d8fcd4929c15ef9cd00fd73567d1" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_isModelValid</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ad66bd96fb4e15eebe79840a535301f51" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_jointPos</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a1882f61b3453b6a5c6112e35a4815ace" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_kinematicTraversals</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a17ba66ad1147e01871b368cd7843f706" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_linkIntWrenches</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1add15a23c42a1eed9bbdf5528a79aedfc" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_linkNetExternalWrenches</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a4ce21922d525f32ac0b4dad58a2dac4c" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_linkProperAccs</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a940080c96e8902612b6ba498aab8bd2d" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_linkVels</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a7c99313056580a1c4b3d430b2979ed89" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_model</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a2419039fe9f3da18a4390b7d3f4ce9fe" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_sensors</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a8e0a0934d651bbc4df90cb2ef36c16f8" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>m_submodels</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ae1fcc20d0e3eb0eace44e334d931c0f4" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>model</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a4bcfb0a181f1106f4a7eff14757f1ef5" prot="private" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>operator=</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a5da76e1decfef128f4580a108d865166" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>sensors</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1ab62c38a61392178a65af5a90a6a7a076" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>setModelAndSensors</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a0ad964451590f8bbe0a9bb9e01de1374" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>submodels</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a988f7114c5e0661ddd931d98c04645c9" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>updateKinematicsFromFixedBase</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a5d44956cd4c5a64c2c3397fce2c9edd8" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>updateKinematicsFromFloatingBase</name></member>
      <member refid="classiDynTree_1_1ExtWrenchesAndJointTorquesEstimator_1a21ecaac3728255f5ad511123ca97ec77" prot="public" virt="non-virtual"><scope>iDynTree::ExtWrenchesAndJointTorquesEstimator</scope><name>~ExtWrenchesAndJointTorquesEstimator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
